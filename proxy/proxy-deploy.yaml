apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-oidc-proxy
  namespace: auth-proxy
  labels: { app: kube-oidc-proxy }
spec:
  replicas: 1
  selector:
    matchLabels: { app: kube-oidc-proxy }
  template:
    metadata:
      labels: { app: kube-oidc-proxy }
    spec:
      serviceAccountName: kube-oidc-proxy
      containers:
      - name: proxy
        image: ghcr.io/tremolosecurity/kube-oidc-proxy:1.0.9-b1a3a1
        imagePullPolicy: IfNotPresent
        command: ["/usr/local/bin/kube-oidc-proxy"]   # or "/kube-oidc-proxy" if needed
        args:
          - --listen-address=0.0.0.0:443
          - --oidc-issuer-url=$(ISSUER)
          - --oidc-client-id=$(CLIENT_ID)
          - --oidc-username-claim=preferred_username
          - --oidc-groups-claim=groups
          - --oidc-ca-file=/etc/oidc/ca.crt
          - --upstream-url=https://kubernetes.default.svc
          - --upstream-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-client-cert-file=/etc/front-proxy/tls.crt
          - --proxy-client-key-file=/etc/front-proxy/tls.key
          - --skip-auth-regex=/healthz
          - --v=2
        ports:
        - name: https
          containerPort: 443
        env:
        - name: ISSUER
          valueFrom: { secretKeyRef: { name: oidc-config, key: issuer } }
        - name: CLIENT_ID
          valueFrom: { secretKeyRef: { name: oidc-config, key: clientID } }
        volumeMounts:
        - name: oidc-ca
          mountPath: /etc/oidc
          readOnly: true
        - name: front-proxy-client
          mountPath: /etc/front-proxy
          readOnly: true
      volumes:
      - name: oidc-ca
        secret:
          secretName: oidc-config
          items: [{ key: ca.crt, path: ca.crt }]
      - name: front-proxy-client
        secret:
          secretName: front-proxy-client
          items:
          - { key: tls.crt, path: tls.crt }
          - { key: tls.key, path: tls.key }
---
apiVersion: v1
kind: Service
metadata:
  name: kube-oidc-proxy
  namespace: auth-proxy
  labels: { app: kube-oidc-proxy }
spec:
  type: NodePort
  selector: { app: kube-oidc-proxy }
  ports:
  - name: https
    port: 443
    targetPort: https
    nodePort: 30044
